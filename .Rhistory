library(lattice
)
head(daywiseSteps)
data<-read.csv("./activity.csv",stringsAsFactors=FALSE)
data$date=as.Date(data$date,"%Y-%m-%d")
data1<-subset(data,!is.na(data$steps))
subtotalSteps<-aggregate(steps~date,data1,sum)
meanSteps<-mean(subtotalSteps$steps)
medianSteps<-median(subtotalSteps$steps)
hist(subtotalSteps$steps, col="red")
#timeseries plot
intervalSteps<-aggregate(steps~interval,data1,mean)
head(intervalSteps)
plot(intervalSteps$interval,intervalSteps$steps,type="l",xlab="")
intervalSteps$interval[intervalSteps$steps==max(intervalSteps$steps)]
datafill<-data
for (i in 1:nrow(datafill)) {
if(is.na(datafill[i,1])) {
datafill[i,1]<-intervalSteps$steps[intervalSteps$interval==datafill[i,3]]
}
}
datafill<-data
datafill$weekday<-weekdays(datafill$date)
datafill$dayIndicator<-datafill$weekday
for(i in 1:nrow(datafill)) {
if(datafill[i,4]=="Sunday"|datafill[i,4]=="Saturday") {
datafill[i,5]<-"weekend"
}
else {datafill[i,5]="weekday"}
}
daywiseSteps<-aggregate(steps~dayIndicator+interval,datafill,mean)
with(subset(daywiseSteps,dayIndicator=="weekday"),plot(interval,steps,type="l",col="red"))
with(subset(daywiseSteps,dayIndicator=="weekend"),points(interval,steps,type="l",col="blue"))
aggregate(steps~dayIndicator,datafill,mean)
xyplot(interval~steps|dayIndicator,daywiseSteps,layout=c(1,2))
getwd()
setwd(C:/Laks_LTI/Self/Coursera/Quiz files"")
setwd("C:/Laks_LTI/Self/Coursera/Quiz files")
data<-read.csv("./activity.csv",stringsAsFactors=FALSE)
data$date=as.Date(data$date,"%Y-%m-%d")
data1<-subset(data,!is.na(data$steps))
subtotalSteps<-aggregate(steps~date,data1,sum)
meanSteps<-mean(subtotalSteps$steps)
medianSteps<-median(subtotalSteps$steps)
hist(subtotalSteps$steps, col="red")
#timeseries plot
intervalSteps<-aggregate(steps~interval,data1,mean)
head(intervalSteps)
plot(intervalSteps$interval,intervalSteps$steps,type="l",xlab="")
intervalSteps$interval[intervalSteps$steps==max(intervalSteps$steps)]
datafill<-data
for (i in 1:nrow(datafill)) {
if(is.na(datafill[i,1])) {
datafill[i,1]<-intervalSteps$steps[intervalSteps$interval==datafill[i,3]]
}
}
datafill<-data
datafill$weekday<-weekdays(datafill$date)
datafill$dayIndicator<-datafill$weekday
for(i in 1:nrow(datafill)) {
if(datafill[i,4]=="Sunday"|datafill[i,4]=="Saturday") {
datafill[i,5]<-"weekend"
}
else {datafill[i,5]="weekday"}
}
daywiseSteps<-aggregate(steps~dayIndicator+interval,datafill,mean)
with(subset(daywiseSteps,dayIndicator=="weekday"),plot(interval,steps,type="l",col="red"))
with(subset(daywiseSteps,dayIndicator=="weekend"),points(interval,steps,type="l",col="blue"))
aggregate(steps~dayIndicator,datafill,mean)
xyplot(interval~steps|dayIndicator,daywiseSteps,layout=c(1,2))
xyplot(interval~steps|dayIndicator,daywiseSteps,layout=c(1,2),type='l')
xyplot(interval~steps|dayIndicator,daywiseSteps,layout=c(1,2),type='l')
xyplot(interval~steps|dayIndicator,daywiseSteps,layout=c(1,2),type='l')
xyplot(steps~interval|dayIndicator,daywiseSteps,layout=c(1,2),type='l')
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
data<-read.csv("./activity.csv",stringsAsFactors=FALSE)
data$date=as.Date(data$date,"%Y-%m-%d")
```
## What is mean total number of steps taken per day?
Plotting the histogram of total steps taken per day
```{r}
data1<-subset(data,!is.na(data$steps))
subtotalSteps<-aggregate(steps~date,data1,sum)
hist(subtotalSteps$steps, main="")
```
```{r}
meanSteps<-mean(subtotalSteps$steps)
medianSteps<-median(subtotalSteps$steps)
```
- mean of the total steps taken per day is `r meanSteps`
- median of the total steps taken per day is `r medianSteps`
##What is the average daily activity pattern?
Plotting average steps per interval across all days
```{r}
intervalSteps<-aggregate(steps~interval,data1,mean)
head(intervalSteps)
plot(intervalSteps$interval,intervalSteps$steps,type="l",xlab="time interval",ylab="average steps perinterval")
maxInterval<-intervalSteps$interval[intervalSteps$steps==max(intervalSteps$steps)]
```
The interval with max no of steps on average is `r maxInterval`
##Imputing missing values
```{r}
missingRows<-nrow(data)-nrow(na.omit(data))
```
No of rows with missing values is `r missingRows`
Filling the missing values
```{r}
## missed values are filled with average no of steps per interval taken across ##all days.
datafill<-data
for (i in 1:nrow(datafill)) {
if(is.na(datafill[i,1])) {
datafill[i,1]<-intervalSteps$steps[intervalSteps$interval==datafill[i,3]]
}
}
```
Histogram of Steps taken per day
```{r}
stepsPerDay<-aggregate(steps~date,datafill,sum)
hist(stepsPerDay$steps,xlab="steps taken per day",main="")
meanStepsPerDay<-mean(stepsPerDay$steps)
medianStepsPerDay<-median(stepsPerDay$steps)
```
- Mean of steps per day with the missing values flled in is `r meanStepsPerDay`
- Median of steps per day with the missing values flled in is `r medianStepsPerDay`
Compare this with the Mean and median with out filling in the missing values
- mean  `r meanSteps`
- median  `r medianSteps`
##Are there differences in activity patterns between weekdays and weekends?
Plotting average steps per interval
``` {r}
datafill$weekday<-weekdays(datafill$date)
datafill$dayIndicator<-datafill$weekday
for(i in 1:nrow(datafill)) {
if(datafill[i,4]=="Sunday"|datafill[i,4]=="Saturday") {
datafill[i,5]<-"weekend"
}
else {datafill[i,5]="weekday"}
}
library(lattice)
xyplot(steps~interval|dayIndicator,daywiseSteps,layout=c(1,2),type='l')
```
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
data<-read.csv("./activity.csv",stringsAsFactors=FALSE)
data$date=as.Date(data$date,"%Y-%m-%d")
```
## What is mean total number of steps taken per day?
Plotting the histogram of total steps taken per day
```{r}
data1<-subset(data,!is.na(data$steps))
subtotalSteps<-aggregate(steps~date,data1,sum)
hist(subtotalSteps$steps, main="")
```
```{r}
meanSteps<-mean(subtotalSteps$steps)
medianSteps<-median(subtotalSteps$steps)
```
- mean of the total steps taken per day is `r meanSteps`
- median of the total steps taken per day is `r medianSteps`
##What is the average daily activity pattern?
Plotting average steps per interval across all days
```{r}
intervalSteps<-aggregate(steps~interval,data1,mean)
head(intervalSteps)
plot(intervalSteps$interval,intervalSteps$steps,type="l",xlab="time interval",ylab="average steps perinterval")
maxInterval<-intervalSteps$interval[intervalSteps$steps==max(intervalSteps$steps)]
```
The interval with max no of steps on average is `r maxInterval`
##Imputing missing values
```{r}
missingRows<-nrow(data)-nrow(na.omit(data))
```
No of rows with missing values is `r missingRows`
Filling the missing values
```{r}
## missed values are filled with average no of steps per interval taken across ##all days.
datafill<-data
for (i in 1:nrow(datafill)) {
if(is.na(datafill[i,1])) {
datafill[i,1]<-intervalSteps$steps[intervalSteps$interval==datafill[i,3]]
}
}
```
Histogram of Steps taken per day
```{r}
stepsPerDay<-aggregate(steps~date,datafill,sum)
hist(stepsPerDay$steps,xlab="steps taken per day",main="")
meanStepsPerDay<-mean(stepsPerDay$steps)
medianStepsPerDay<-median(stepsPerDay$steps)
```
- Mean of steps per day with the missing values flled in is `r meanStepsPerDay`
- Median of steps per day with the missing values flled in is `r medianStepsPerDay`
Compare this with the Mean and median with out filling in the missing values
- mean  `r meanSteps`
- median  `r medianSteps`
##Are there differences in activity patterns between weekdays and weekends?
Plotting average steps per interval
``` {r}
datafill$weekday<-weekdays(datafill$date)
datafill$dayIndicator<-datafill$weekday
for(i in 1:nrow(datafill)) {
if(datafill[i,4]=="Sunday"|datafill[i,4]=="Saturday") {
datafill[i,5]<-"weekend"
}
else {datafill[i,5]="weekday"}
}
library(lattice)
xyplot(steps~interval|dayIndicator,daywiseSteps,layout=c(1,2),type='l')
```
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
data<-read.csv("./activity.csv",stringsAsFactors=FALSE)
data$date=as.Date(data$date,"%Y-%m-%d")
```
## What is mean total number of steps taken per day?
Plotting the histogram of total steps taken per day
getwd()
knit2html()
library(knitr)
knit2html()
knit2html("PA1_template.Rmd"")
knit2html("PA1_template.Rmd")
getwd()
setwd("C:/Laks_LTI/Self/Coursera/Quiz files/RepData_PeerAssessment1"
)
getwd()
knit2html("PA1_template.Rmd")
knit2html("PA1_template.html")
